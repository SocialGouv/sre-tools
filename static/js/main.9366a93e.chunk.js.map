{"version":3,"sources":["App.js","certificates.js","Form.js","useQueryParams.js","yamlToEnv.js","index.js"],"names":["dotenv","config","multiline","debug","path","Intro","_jsxs","Jumbotron","style","padding","children","_jsx","CodeArea","props","_objectSpread","fontSize","fontFamily","border","width","height","Copier","_ref","text","_useState","useState","_useState2","_slicedToArray","copied","setCopied","CopyToClipboard","onCopy","setTimeout","Clipboard","marginLeft","cursor","transition","color","title","size","parseClearText","values","match","parse","Buffer","from","VALUE","Editor","_useState3","cluster","value","namespace","name","_useState4","formData","setFormData","_useState5","_useState6","encrypted","setEncrypted","_useState7","_useState8","yamlResult","setYamlResult","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","pemKey","sealedSecret","keys","wrap","_context","prev","next","certificates","console","log","abrupt","getSealedSecret","scope","sent","Object","length","spec","encryptedData","yaml","dump","noRefs","lineWidth","stop","_x","apply","arguments","Container","Row","Col","xs","Form","initialFormData","_Fragment","Card","marginTop","display","Body","Title","defaultValue","App","className","dev","prod","keyValidator","RadioChoice","React","forwardRef","ref","_objectWithoutProperties","_excluded","BsForm","Check","inline","id","concat","label","type","keepValidQueryParamKeys","key","includes","object","filter","reduce","acc","_defineProperty","_useQueryParams","urlParams","window","location","search","innerData","setInnerData","useCallback","history","replaceState","document","href","split","stringify","useQueryParams","_useQueryParams2","queryParamsData","setQueryParamsData","queryParams","defaultValues","_useForm","useForm","mode","register","handleSubmit","watch","setValue","trigger","getValues","_onSubmit","useEffect","subscription","_ref3","unsubscribe","_ref4","md","sm","Label","onChange","e","target","disabled","Group","as","column","Control","required","placeholder","Alert","variant","rows","onPaste","pastedValue","clipboardData","getData","isSelected","selectionStart","selectionEnd","trim","preventDefault","string","obj","load","constructor","entries","map","join","error","toEnv","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9366a93e.chunk.js","sourcesContent":["import \"os-browserify\";\nimport React, { useState } from \"react\";\nimport { Card, Jumbotron, Container, Row, Col } from \"react-bootstrap\";\nimport { getSealedSecret } from \"@socialgouv/aes-gcm-rsa-oaep\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { Clipboard } from \"react-feather\";\nimport yaml from \"js-yaml\";\n\nimport dotenv from \"dotenv\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Form } from \"./Form\";\nimport { certificates } from \"./certificates.js\";\n\ndotenv.config({ multiline: true, debug: true, path: false });\n\nconst Intro = () => (\n  <Jumbotron style={{ padding: \"2rem 1rem\" }}>\n    <h1>WebSeal</h1>\n    <p>Client-side sealed-secrets generation</p>\n  </Jumbotron>\n);\n\nconst CodeArea = (props) => (\n  <textarea\n    {...props}\n    style={{\n      fontSize: \"0.8rem\",\n      fontFamily: \"Courier\",\n      border: \"1px solid #ccc\",\n      width: \"100%\",\n      padding: 5,\n      height: 400,\n      ...(props.style || {}),\n    }}\n  ></textarea>\n);\n\nconst Copier = ({ text }) => {\n  const [copied, setCopied] = useState(false);\n  return (\n    <CopyToClipboard\n      text={text}\n      onCopy={() => {\n        setCopied(true);\n        setTimeout(() => setCopied(false), 2000);\n      }}\n    >\n      <Clipboard\n        style={{\n          marginLeft: 10,\n          cursor: \"pointer\",\n          transition: \"all 0.2s ease-in\",\n        }}\n        color={copied ? \"green\" : \"black\"}\n        title=\"Copy\"\n        size={16}\n      />\n    </CopyToClipboard>\n  );\n};\n\nexport const parseClearText = (text) => {\n  let values = {};\n  // detect if multiple variables detected\n  if (text.match(/^([\\w_\\.-\\d]+)=(.+)$/im)) {\n    values = dotenv.parse(Buffer.from(text));\n  } else {\n    values.VALUE = text;\n  }\n  return values;\n};\n\nconst Editor = () => {\n  const [formData, setFormData] = useState({\n    cluster: \"dev\",\n    value: \"\",\n    namespace: \"\",\n    name: \"\",\n  });\n  const [encrypted, setEncrypted] = useState(null);\n  const [yamlResult, setYamlResult] = useState(null);\n  const onSubmit = async (data) => {\n    setFormData(data);\n    setYamlResult(\"\");\n    setEncrypted(\"\");\n\n    if (data.value && data.value !== formData.value) {\n      const pemKey = certificates[data.cluster];\n      const values = parseClearText(data.value);\n\n      if ((data.cluster === \"prod\" && !data.namespace) || !data.name) {\n        console.log(\"namespace and name are mandatory\");\n        setYamlResult(\"\");\n        setEncrypted(\"\");\n        return;\n      } else if (!data.value) {\n        console.log(\"value is mandatory\");\n        setYamlResult(\"\");\n        setEncrypted(\"\");\n        return;\n      } else {\n        const sealedSecret = await getSealedSecret({\n          pemKey,\n          namespace: data.namespace || null,\n          name: data.name || \"some-secret-name\",\n          scope: data.scope,\n          values,\n        });\n        const keys = Object.keys(values);\n        if (keys.length === 1) {\n          setEncrypted(sealedSecret.spec.encryptedData[keys[0]]);\n        } else {\n          setEncrypted(\n            \"Not available for multiple values, use the below secret\"\n          );\n        }\n        setYamlResult(yaml.dump(sealedSecret, { noRefs: true, lineWidth: -1 }));\n      }\n    }\n  };\n  return (\n    <Container>\n      <Intro />\n      <Row>\n        <Col xs={12}>\n          <Form onSubmit={onSubmit} initialFormData={formData} />\n\n          {\n            <>\n              <Card style={{ marginTop: 10, display: \"none\" }}>\n                <Card.Body>\n                  <Card.Title>\n                    Encrypted <Copier text={encrypted} />\n                  </Card.Title>\n                  <CodeArea defaultValue={encrypted} style={{ height: 200 }} />\n                </Card.Body>\n              </Card>\n              <Card style={{ marginTop: 10 }}>\n                <Card.Body>\n                  <Card.Title>\n                    SealedSecret <Copier text={yamlResult} />\n                  </Card.Title>\n                  <CodeArea defaultValue={yamlResult} />\n                </Card.Body>\n              </Card>\n            </>\n          }\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Editor />\n    </div>\n  );\n}\n","\n// https://kubeseal.dev2.fabrique.social.gouv.fr/v1/cert.pem\nexport const dev = `-----BEGIN CERTIFICATE-----\nMIIErjCCApagAwIBAgIRAOqAV9ZpCl1cwMunTHirqXwwDQYJKoZIhvcNAQELBQAw\nADAeFw0yMDA1MjYwODQxMTBaFw0zMDA1MjQwODQxMTBaMAAwggIiMA0GCSqGSIb3\nDQEBAQUAA4ICDwAwggIKAoICAQDc5wz/el5+ghmNAsQzpFK3jtLRIDcoYgyeGHaG\nLH/FCuatiE3qhFeJt2uYQ+GFmEg3e9N/6xDY8NgUMvLdUlAfl5TqV5H96EXTSsGE\naRL2K4EIIdmFflas+r7dh5IYtmV8NTXW2ESLkyOe3PufK/OhdD/xcxglYLM+JnR2\npbKqFvFcsk+LHK3FTWt0xSeqgd+6G9PIxUAbHtoKYI9R41rWnCXY7n0zp+zWD/6j\nEDsbCgFJ657Zwwn0XXGkQqItdZsN+ETIcBVIdqemzcksd7RRUZQiJF8imM5S/wj/\n1o55JwAPLqg5Odj5T/pQq4gSG+UG1P0eJxBQpUCgmtW1SAjS2Gv9kkuw/PAMmLAa\nN0uHnM8TY9OPLLMENjmn9IhvYrhj5lKff4NXNC4nHFSDUAVfu5kNHrYn9WnCCw/f\nZE81p5Do7IcsbfmgEq3Ttg7p1eqXpH9NE9TWSZTz3HW/0lmEuIsNxjX/692DBeP/\nCCUiYlAef704Woo84jwIz4jEwfjonsFVaHbbtIGyqjvTlWcYfQnCLvnB+Plqutc/\n/p8/ViXXfuAwj/K3lYvhGWt2TNLo963XG/pqBVbZxYVI4m7IzrZ0vhbhck1oGYN8\nyX8sYPBUn5/5X/bJ8Xz1KsAeCfSXAvCjAZ3MfQDwxbsEURVQAeiDcF61G75/Lq/Z\nBm74hwIDAQABoyMwITAOBgNVHQ8BAf8EBAMCAAEwDwYDVR0TAQH/BAUwAwEB/zAN\nBgkqhkiG9w0BAQsFAAOCAgEAKLvQtDV5QVNUEcg3ywL03IwtNWmU8EqqASgckVAc\ndmeGnFwV7+7VnrIHI34xCZDhAVEnlMAb0oELgTDSstTx4p25rjqOLQfPcb0TsPko\ncpJHS00trLsLX4DYoZ1dLprgySGrC9jQ/FMYMK1oZ0M04gA/U9alNVNu2DWKosHu\nJGRYBbXVnse5rZi3hl4GV5Vq2ZR/3GHL9xgcjMcSLqHhXoSULLm5qEBUA5flV0BJ\nbY2FEfpm1NHSh5vOaA5t7lrW/XqiAuo8lJM2Ztg/dsX6Zxq7Memq8nqMRpoMFbdj\ni0jTxlPL1ssVHvvmWcLsdx9fHX7XaNGZ4ulA6BIL4DZQMPxvtFk9alqbc9WnjsqL\n/8QA3STXkTSzWrSsTUcabxlp5+MLHRf31iE1dlGVv7FVLjPy29T145eSzoNPM9sN\n1+aBLnXDCj5HUwto8+iKJn7VTURty5KceUFSeURXM2IKYYTec8MElLX0PeXi+SvO\nW37ZCn0RMnljus5aTUPbRHNvJ3Ut/1WDLQu8X0wIm509F1A80Udg5FTxHasBizM2\nL+rpr2923MG1JSitDfvNj1rxx1FLdynP84SOEJDCtbB8YRcDUC4bHKrAcG4FBAFX\nUDzbbsoR58onjcZW3QH4mvV9K3+llwHSo8zfYyKRhF8pUUJHp7A/8DgMYQyYAv2z\nbag=\n-----END CERTIFICATE-----`;\n\n// https://kubeseal.prod2.fabrique.social.gouv.fr/v1/cert.pem\nexport const prod = `-----BEGIN CERTIFICATE-----\nMIIErTCCApWgAwIBAgIQXJCfJIfF/fpww3KcvD0j1TANBgkqhkiG9w0BAQsFADAA\nMB4XDTIwMDUyNjA4NDkyN1oXDTMwMDUyNDA4NDkyN1owADCCAiIwDQYJKoZIhvcN\nAQEBBQADggIPADCCAgoCggIBAK8tTm78wfObpDaAa00eli9TwZfjbSO+Bis6DqNX\nto+tddnEBuEmnOlTKKoODZwnuph/G8JELKwbaTJ1bdYKasKDdgYju52ZMjBNexs4\nOX1L+YLiJEkwYBSkmYR/ARAulXIAolozjvub888OdWWOuZfX3DeNh/AI24uc+nrw\nsiKMyRZSsW9OXhRpBFe1BY8xofvnf1Ts5+OZWeNEmTbAKROKDd3rJpaKzxsJJwQ+\nSmRUQnxmwNxOfjFFxJx6n1jRloqwpLTOkCX/iSp6Nhnprcs8dvFjSH7l+gQU8XVY\nVXRWfXdJ6hBZd6fOjhKxlIrPz5+mUsMhyzON3ZS83XG9imFrWgSh3nBCifZRs4YF\nwxtGL1Qwm6CM+OsjLHM4lo6hrh9eEZVO8TwrXWKDU1CKkBgXVA5irGJ7NbGKtzih\nBZMRZ5pqQQ6ptiLXxfiB6DgvIJqvL8+yrt22j/QFZtyKkVW02n+dNiI7ltxb9RdS\nhyv3wBbHORgw6DbPrpoRpabDfUDEGJnd7+gY0Z5P9wHeX1vtt4g+XR5z/ERWIkFR\nuK2cLpflhGv4zE5DkI/2Pp4EAsQirUPlbdelvEz6NPtJk6ws5gQgBorRPaDhZojz\ntcYkFzRv3gkNHCMCMEAPEgU1OdUqslJVwi9P+/cxe9Piwwd9WWTu7mg6OB0cjhPI\ntYzhAgMBAAGjIzAhMA4GA1UdDwEB/wQEAwIAATAPBgNVHRMBAf8EBTADAQH/MA0G\nCSqGSIb3DQEBCwUAA4ICAQAjGgAz92xGNjbcIxsn2B/URYTBcsKd9RcgmzB3kDWq\nEKUV3KbgAItq4c2WB9bc0IG1Icp9bYOXZy1ldPoGib4edMUZuOU4xUAFVCrALGbk\ng8ldoEuIiSGAjQDuvWxl6XK8/FcBK93tR591zuJHS2KXspnV3FWi1tE8lr2zEd+G\nwuFzm0/uAyg+A+SEZVGwSBSH0fMWcCEk+yGyb4zmM3VW8D5zQvbialiqdmycZWoi\nC7Ldto5dBeFCCL7ndh1U0//UqaDmRCLazSeU6wCilWT4RvejBwNcojIYd0wk9keS\n8z92wpKj5Hv+OPn1r4fAmMnc3ObwtkVnka+QvuhKZOXmNInJSqdsZFToS6TaQOO6\n/W/urXYlcILJPlbTMlpjzxYVCi93yMcSrrdZ3MADlPhgtN+clVIRSQ/7eIDkh7j9\n9C+Dsz9nKa7FBSngDheJEEPcG2jNeRvO9kM2hgkMfcNdmTZUNyE19p1bdnTFoWCs\nq22fGvXZi6kkZTMDcSYDBZ8OkWK20GuZAs1mxrz9HfMdZobH7yNOj7Oj+0bNf5Ef\ntN6We84bWM+Xh7wlZxXPHpos5JDC5PV1Kmbwf3riLtTVe2W7hy+oKULS+WO59KJz\niKzeAM8CuUQixJtSmrNjp1nAsSR6/BZXWRvmZShksQ4kwFm/PlsWLEKgtzxtP0tN\nfg==\n-----END CERTIFICATE-----`;\n\nexport const certificates = {\n  dev,\n  prod,\n};\n","import React from \"react\";\n\nimport { Row, Col, Form as BsForm, Alert } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useQueryParams } from \"./useQueryParams\";\n\nimport { toEnv } from \"./yamlToEnv\";\n\nconst RadioChoice = React.forwardRef(({ name, value, ...props }, ref) => (\n  <BsForm.Check\n    inline\n    ref={ref}\n    name={name}\n    id={`${name}-${value}`}\n    label={value}\n    type=\"radio\"\n    value={value}\n    {...props}\n  />\n));\n\nconst isValidQueryParamsKey = (key) =>\n  [\"namespace\", \"scope\", \"cluster\", \"name\"].includes(key);\n\nconst removeInvalidKeys = (keyValidator) => (object) =>\n  Object.keys(object)\n    .filter(keyValidator)\n    .reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: object[key],\n      }),\n      {}\n    );\n\nconst keepValidQueryParamKeys = removeInvalidKeys(isValidQueryParamsKey);\n\nexport const Form = ({ onSubmit, initialFormData }) => {\n  const [queryParamsData, setQueryParamsData] = useQueryParams();\n\n  const queryParams = keepValidQueryParamKeys(queryParamsData);\n\n  const defaultValues = {\n    ...initialFormData,\n    ...queryParams,\n    scope: queryParams.cluster === \"prod\" ? \"namespace\" : \"cluster\",\n  };\n\n  const { register, handleSubmit, watch, setValue, trigger, getValues } =\n    useForm({\n      mode: \"onChange\",\n      defaultValues,\n    });\n\n  const _onSubmit = (data) => {\n    setQueryParamsData(keepValidQueryParamKeys(data));\n    onSubmit(data);\n  };\n\n  const cluster = watch(\"cluster\");\n  const scope = watch(\"scope\");\n  const value = watch(\"value\");\n\n  React.useEffect(() => {\n    const subscription = watch(\n      (\"value\",\n      ({ name, type }) => {\n        const values = getValues();\n        _onSubmit(values);\n      })\n    );\n    return () => subscription.unsubscribe();\n  }, [watch]);\n\n  React.useEffect(() => {\n    const subscription = watch(\n      (\"cluster\",\n      ({ name, type }) => {\n        const values = getValues();\n        _onSubmit(values);\n      })\n    );\n    return () => subscription.unsubscribe();\n  }, [watch]);\n\n  const onValuePaste = (e) => {\n    const pastedValue = e.clipboardData.getData(\"Text\");\n    const isSelected =\n      e.target.selectionStart === 0 && e.target.selectionEnd === value.length;\n    if (pastedValue && (value.trim() === \"\" || isSelected)) {\n      e.preventDefault();\n      setValue(\"value\", toEnv(pastedValue));\n    }\n  };\n\n  return (\n    <BsForm onSubmit={handleSubmit(_onSubmit)}>\n      <Row>\n        <Col xs={12} md={6}>\n          <Row>\n            <Col sm=\"3\">\n              <BsForm.Label>Cluster</BsForm.Label>\n            </Col>\n            <Col sm=\"9\">\n              <RadioChoice\n                name=\"cluster\"\n                value=\"dev\"\n                label=\"dev / preprod\"\n                {...register(\"cluster\")}\n                onChange={(e) => {\n                  setValue(\"cluster\", e.target.value);\n                  setValue(\"scope\", \"cluster\");\n                  // setValue(\"namespace\", undefined);\n                  // setValue(\"name\", undefined);\n                  trigger();\n                }}\n              />\n              <RadioChoice\n                name=\"cluster\"\n                value=\"prod\"\n                {...register(\"cluster\")}\n                onChange={(e) => {\n                  setValue(\"cluster\", e.target.value);\n                  setValue(\"scope\", \"namespace\");\n                  trigger();\n                }}\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col style={{ display: \"none\" }}>\n          <Row>\n            <Col xs={12} sm={3}>\n              <BsForm.Label>Scope</BsForm.Label>\n            </Col>\n            <Col sm={9}>\n              <RadioChoice\n                name=\"scope\"\n                value=\"cluster\"\n                disabled={cluster === \"prod\"}\n                {...register(\"scope\")}\n                onChange={(e) => {\n                  setValue(\"scope\", e.target.value);\n                  trigger();\n                }}\n              />\n              <RadioChoice\n                name=\"scope\"\n                value=\"namespace\"\n                {...register(\"scope\")}\n                onChange={(e) => {\n                  setValue(\"scope\", e.target.value);\n                  trigger();\n                }}\n              />\n              <RadioChoice\n                name=\"scope\"\n                value=\"strict\"\n                disabled={cluster === \"prod\"}\n                {...register(\"scope\")}\n                onChange={(e) => {\n                  setValue(\"scope\", e.target.value);\n                  trigger();\n                }}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <BsForm.Group as={Row}>\n        <BsForm.Label column>\n          Namespace {cluster === \"prod\" ? \"*\" : \"\"}\n        </BsForm.Label>\n        <Col sm=\"9\">\n          <BsForm.Control\n            name=\"namespace\"\n            {...register(\"namespace\", { required: true })}\n            required\n            type=\"text\"\n            placeholder=\"K8s Namespace (optional in dev)\"\n          />\n        </Col>\n      </BsForm.Group>\n      <BsForm.Group as={Row}>\n        <BsForm.Label column>Secret name *</BsForm.Label>\n        <Col sm=\"9\">\n          <BsForm.Control\n            name=\"name\"\n            {...register(\"name\", { required: true })}\n            type=\"text\"\n            placeholder=\"K8s secret name\"\n          />\n        </Col>\n      </BsForm.Group>\n      {cluster === \"prod\" && (\n        <Alert variant=\"warning\">\n          ⚠️ En production, pensez à re-sceller l'ensemble de vos valeurs et\n          récupérer le fichier YAML complet ci-dessous.\n        </Alert>\n      )}\n      <BsForm.Group>\n        <BsForm.Control\n          as=\"textarea\"\n          name=\"value\"\n          value={value}\n          id=\"value\"\n          style={{ marginTop: 10 }}\n          rows={8}\n          {...register(\"value\", { required: true, value })}\n          onPaste={onValuePaste}\n          onChange={(e) => {\n            setValue(\"value\", e.target.value);\n            trigger();\n          }}\n          placeholder={`MY_TOKEN=SomeSuperSecretToken\nMY_PASSWORD=SomeSuperSecretPassword`}\n        />\n      </BsForm.Group>\n    </BsForm>\n  );\n};\n","import { parse, stringify } from \"query-string\";\nimport { useCallback, useState } from \"react\";\n\nexport const useQueryParams = () => {\n  const urlParams = parse(window.location.search);\n\n  const [innerData, setInnerData] = useState(urlParams);\n\n  const setData = useCallback(\n    (data) => {\n      // dont reload page\n      window.history.replaceState(\n        {},\n        window.title,\n        document.location.href.split(\"?\")[0] + \"?\" + stringify(data)\n      );\n      setInnerData(data);\n    },\n    [setInnerData]\n  );\n\n  return [innerData, setData];\n};\n","import { load } from \"js-yaml\";\n\nexport const toEnv = (string) => {\n  try {\n    const obj = load(string);\n    if (obj != null && obj.constructor.name === \"Object\") {\n      const env = Object.entries(obj)\n        .map(([key, value]) => `${key}=\\`${value}\\``)\n        .join(\"\\n\");\n      return env;\n    }\n  } catch (e) {\n    console.error(e);\n    return string;\n  }\n  return string;\n};\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}