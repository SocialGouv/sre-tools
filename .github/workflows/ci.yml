name: ci
on:
  - push
  - pull_request

jobs:
  build:
    strategy:
      # Don't fast-fail on tag and master
      fail-fast: ${{ github.event_name == 'pull_request' || (github.ref !=
        'refs/heads/master' && !startsWith(github.ref, 'refs/tags/')) }}
      matrix:
        include:
          - os: macOS-latest
            node-version: 16.x
            kind: test
          - os: ubuntu-latest
            node-version: 16.x
            kind: release

    name: ${{ matrix.kind }} on ${{ matrix.node-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      - name: Install kubeseal for macOS
        if: matrix.os == 'macOS-latest'
        run: brew install kubeseal

      - name: Install kubeseal for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          wget https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.12.6/kubeseal-linux-amd64 -O kubeseal
          #
          sudo install -m 755 kubeseal /usr/local/bin/kubeseal

      - name: Install
        run: yarn --frozen-lockfile --perfer-offline

      - name: Lint
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Test
        if: matrix.kind == 'test'
        run: yarn test

      - name: Test and coverage check
        if: matrix.kind == 'release'
        run: yarn test-coverage

      - name: Send test coverage to codecov
        if: matrix.kind == 'release'
        uses: codecov/codecov-action@v2
        continue-on-error: true

      - name: Generate sre-secrets artifacts
        if: matrix.kind == 'release'
        uses: actions/upload-artifact@v2
        with:
          name: sre-secrets
          path: ./packages/sre-secrets/dist

  release:
    needs:
      - build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn

      - name: Install
        run: yarn --frozen-lockfile --perfer-offline

      - name: Npm Authenticate
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.SOCIALGROOVYBOT_NPM_TOKEN }}

      - name: Download sre-secrets artifact
        uses: actions/download-artifact@v2
        with:
          name: sre-secrets
          path: ./packages/sre-secrets/dist

      - name: Semantic Release
        if: |
          github.event_name == 'push' &&
          github.repository == 'SocialGouv/sre-tools'
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        with:
          semantic_version: 17
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/git
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.SOCIALGROOVYBOT_EMAIL }}
          GIT_AUTHOR_NAME: ${{ secrets.SOCIALGROOVYBOT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.SOCIALGROOVYBOT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.SOCIALGROOVYBOT_NAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: New version
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}
